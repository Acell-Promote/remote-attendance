generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(uuid())
  email           String       @unique
  name            String?
  password        String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  role            Role         @default(USER)
  attendances     Attendance[]
  comments        Comment[]
  reviewedReports Report[]     @relation("ReviewedReports")
  reports         Report[]     @relation("UserReports")
}

model Attendance {
  id        String    @id @default(uuid())
  userId    String
  clockIn   DateTime  @default(now())
  clockOut  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
}

model Report {
  id         String       @id @default(uuid())
  userId     String
  content    String
  createdAt  DateTime     @default(now())
  date       DateTime     @default(now())
  reviewerId String?
  updatedAt  DateTime     @updatedAt
  status     ReportStatus @default(DRAFT)
  title      String
  comments   Comment[]
  reviewer   User?        @relation("ReviewedReports", fields: [reviewerId], references: [id])
  user       User         @relation("UserReports", fields: [userId], references: [id])
}

model Comment {
  id        String   @id @default(uuid())
  reportId  String
  userId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  report    Report   @relation(fields: [reportId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum ReportStatus {
  DRAFT
  SUBMITTED
  REVIEWED
}
