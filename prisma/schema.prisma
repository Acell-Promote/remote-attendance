// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum ReportStatus {
  DRAFT
  SUBMITTED
  REVIEWED
  APPROVED
  REJECTED
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attendances Attendance[]
  reports     Report[]
  reviews     Report[]     @relation("reviewer")
  comments    Comment[]
}

model Attendance {
  id              String    @id @default(uuid())
  userId          String
  clockIn         DateTime  @default(now())
  clockOut        DateTime?
  plannedClockOut DateTime
  breakMinutes    Int       @default(0)
  is_active       Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([is_active])
}

model Report {
  id         String       @id @default(uuid())
  userId     String
  reviewerId String?
  title      String
  content    String
  status     ReportStatus @default(DRAFT)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  reviewer   User?        @relation("reviewer", fields: [reviewerId], references: [id])
  comments   Comment[]

  @@index([userId])
  @@index([reviewerId])
}

model Comment {
  id        String   @id @default(uuid())
  reportId  String
  userId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  report    Report   @relation(fields: [reportId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([reportId])
  @@index([userId])
}
